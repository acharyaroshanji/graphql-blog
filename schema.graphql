type Query {
  users(query: String): [User!]!
  posts: [Post!]!
}

type Mutation {
  createUser(data: CreateUserInput!): AuthPayload!
  login(data: LoginUserInput!): AuthPayload!
  deleteUser(id: Int!): User!
  updateUser(id: Int!, data: UpdateUserInput!): User!
  createPost(data: CreatePostInput!): Post!
  deletePost(id: Int!): Post!
  updatePost(id: Int!, data: UpdatePostInput!): Post!
}

type AuthPayload {
  user: User!
  token: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateUserInput {
  name: String!
  email: String!
  age: Int!
  password: String!
}

input UpdateUserInput {
  name: String
  email: String
  age: Int
}

input CreatePostInput {
  title: String!
  body: String!
  author: Int!
}

input UpdatePostInput {
  title: String
  body: String
}

type User {
  id: Int!
  name: String!
  email: String!
  age: Int!
  posts: [Post!]!
}

type Post {
  id: Int!
  title: String!
  body: String!
  author: User!
}
